/* Copyright (c) 2014, Erik Hogeman <Erik.Hogemn@gmail.com>
 *               2015, Jesper Ã–qvist <jesper.oqvist@cs.lth.se>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Lund University nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
aspect DataStructures {

  // InferredParameterDeclaration is a SimpleSet.
  InferredParameterDeclaration implements SimpleSet<Variable>;

  @Override
  public int InferredParameterDeclaration.size() {
    return 1;
  }

  @Override
  public boolean InferredParameterDeclaration.isEmpty() {
    return false;
  }

  public SimpleSet<Variable> InferredParameterDeclaration.add(Variable o) {
    return new SimpleSetImpl<Variable>(this, o);
  }

  @Override
  public boolean InferredParameterDeclaration.contains(Object o) {
    return this == o;
  }

  @Override
  public boolean InferredParameterDeclaration.isSingleton() {
    return true;
  }

  @Override
  public boolean InferredParameterDeclaration.isSingleton(Variable o) {
    return contains(o);
  }

  @Override
  public Variable InferredParameterDeclaration.singletonValue() {
    return this;
  }

  public Iterator<Variable> InferredParameterDeclaration.iterator() {
    return new SingleItemIterator(this);
  }
}
